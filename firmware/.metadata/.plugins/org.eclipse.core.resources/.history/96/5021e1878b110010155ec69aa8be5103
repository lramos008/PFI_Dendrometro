#ifndef RTC_DRIVER
#define RTC_DRIVER
#include "main.h"
#include <stdbool.h>
// =======================[ ENUMS ]==========================
typedef enum{
	RTC_OK = 0,
	RTC_ERROR_WRITE,
	RTC_ERROR_READ
}tRtcStatus;

typedef enum{
	RTC_ALARM2_ENABLE = 0,
	RTC_ALARM2_DISABLE
}tRtcAlarmState;

// =====================[ STRUCTURES ]=======================
typedef struct{
	uint8_t seconds;
	uint8_t minutes;
	uint8_t hours;
	uint8_t dayOfWeek;
	uint8_t date;
	uint8_t month;
	uint8_t year;
}sRtcDateTime;

// =================[ FUNCTION PROTOTYPES ]==================
void RTCInit(void);
tRtcStatus rtcReadDateTime(sRtcDateTime *dateTime);
tRtcStatus rtcWriteDateTime(const sRtcDateTime *dateTime);
tRtcStatus rtcSetAlarm2Interrupt(bool enable);

tRtcStatus RTCSetDateAndTime(const sDateAndTime *dateTime);
tRtcStatus RTCConfigAlarm1(void);
tRtcStatus RTCConfigAlarm2(void);
#endif	// RTC_DRIVER
