#ifndef HM10_DRIVER_H
#define HM10_DRIVER_H
// ==========================[ Includes ]===============================
#include "main.h"
#include "fifo.h"

// ==========================[ Typedefs ]===============================
typedef enum{
	HM10_OK = 0,
	HM10_ERROR_INIT,
	HM10_ERROR_DEVICE_NOT_PRESENT,
	HM10_ERROR_TX_FULL,
	HM10_ERROR_RX_OVERFLOW,
	HM10_ERROR_INVALID_CMD,
	HM10_ERROR_UART,
	HM10_ERROR_AT_RESPONSE
}HM10Error_t;

typedef enum{
	AT_OK,
	AT_
}HM10ATResponse_t;
// ==========================[ Structs ]================================
typedef struct{

}HM10;

// ======================[ Public functions ]===========================
HM10Error_t HM10Init(void);
HM10Error_t HM10SendData(const uint8_t *data, uint16_t size);
HM10Error_t HM10RegisterCallback(void);
#endif //HM10_DRIVER_H
