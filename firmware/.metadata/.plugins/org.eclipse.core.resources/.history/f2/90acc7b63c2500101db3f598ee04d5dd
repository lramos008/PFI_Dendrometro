#ifndef HM10_DRIVER_H
#define HM10_DRIVER_H
// ==========================[ Includes ]===============================
#include "main.h"
#include "fifo.h"

// ==========================[ Typedefs ]===============================
typedef enum{
	HM10_OK = 0,
	//Errores de inicializacion
	HM10_ERROR_INIT,
	HM10_ERROR_TX_FIFO_FULL,
	HM10_ERROR_TX_UART,
	HM10_ERROR_RX_FIFO_FULL,
	HM10_ERROR_RX_UART,
	HM10_ERROR_INVALID_AT_CMD,
	HM10_ERROR_AT_TIMEOUT,


}HM10Error_t;

// ==========================[ Structs ]================================
typedef struct{
	void (*OnCommandReception)(const uint8_t *data, uint16_t length);
	void (*OnATResponse)(const uint8_t *response, uint16_t length);
	void (*OnIdleState)(void);
}HM10Callbacks_t;

// ======================[ Public functions ]===========================
HM10Error_t HM10Init(void);
HM10Error_t HM10SendData(const uint8_t *data, uint16_t size);
HM10Error_t HM10RegisterCallback(void);
HM10Error_t HM10Process(void);
#endif //HM10_DRIVER_H
