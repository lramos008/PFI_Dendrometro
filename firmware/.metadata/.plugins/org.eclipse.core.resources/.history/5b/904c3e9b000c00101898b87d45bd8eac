#include "main.h"
#include "rtc_driver.h"

#define RTC_START_ADDRESS		0x00;
#define RTC_SECONDS_REGISTER	(RTC_START_ADDRESS + 0x00)
#define RTC_MINUTES_REGISTER	(RTC_START_ADDRESS + 0x01)
#define RTC_HOURS_REGISTER		(RTC_START_ADDRESS + 0x02)
#define RTC_DAY_REGISTER		(RTC_START_ADDRESS + 0x03)
#define RTC_DATE_REGISTER		(RTC_START_ADDRESS + 0x04)
#define RTC_MONTH_REGISTER	(RTC_START_ADDRESS + 0x0)
#define RTC_ALARM_SEC_ADDRESS 	0x07;
#define RTC_ALARM_MIN_ADDRESS 	0x08;
#define RTC_CONTROL_REG_ADDRESS 0x0E;
#define RTC_STATUS_REG_ADDRESS 	0x0E;
/**
 * Configure and start the RTC for its use.
 *
 * @param none
 * @return none
 */
void RTCInit(void){
	//Configurar para tener formato de 24 horas (indicador AM / PM).

}

/**
 * Read date and time from the RTC.
 *
 * @param Pointer to a structure that will store the date and time read.
 * @return none
 */
void RTCGetDateAndTime(sDateAndTime *dateTime){

}

/**
 * Configure RTC with the desired date and time.
 *
 * @param Pointer to a structure that stores the date and time to be configured.
 * @return none
 */
void RTCSetDateAndTime(const sDateAndTime *dateTime){

}

/**
 * Stop RTC and free its ocuppied resources.
 *
 * @param none
 * @return none
 */
void RTCDeinit(void){

}
